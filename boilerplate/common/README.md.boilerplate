![HBC Digital logo](https://raw.githubusercontent.com/gilt/Cleanroom/master/Assets/hbc-digital-logo.png)     
![Gilt Tech logo](https://raw.githubusercontent.com/gilt/Cleanroom/master/Assets/gilt-tech-logo.png)

^q(#) $project:name
^if($project:deprecationNotice|![Deprecation notice](https://raw.githubusercontent.com/gilt/Cleanroom/master/Assets/deprecated-banner.png)

^q(###) Notice: $project:name is no longer supported

$project:deprecationNotice

---
)
^if($project:readme:description|$project:readme:description

)^if($project:meta[$project:grouping][title]|$project:name is part of ^if($project:meta[$project:grouping][project:url]|[the $project:meta[$project:grouping][title]]($project:meta[$project:grouping][project:url])|the $project:meta[$project:grouping][title]) from [$project:meta[$project:grouping][owner:name]]($project:meta[$project:grouping][owner:url])).


^q(###) ^if($project:language == Swift|Swift|Xcode) compatibility

^if($repo:branch -NE master|**Important:** )This is the `$repo:branch` branch. It ^if($project:language == Swift|uses **Swift $versions[$repo:branch:settings][Swift]** and )**requires Xcode $versions[$repo:branch:settings][Xcode]** to compile.^if($versions[$repo:branch:settings][note]|

$versions[$repo:branch:settings][note])
^if($branches:other.count -AND $versions[$branches:other[0]][Swift] != $versions[$repo:branch:settings][Swift]|
^pluralize($branches:other.count||If you need Swift $versions[$branches:other[0]][Swift] compatibility, use the [`${branches:other[0]}`](^if($branches:other[0] -EQ master|${repo:url:home}|${repo:url:branch}/${branches:other[0]})) branch, which requires Xcode $versions[$branches:other[0]][Xcode].|$branches:other.count other branches are also available:

^join(^list($branches:other|- The [`${item}`](^if($item -EQ master|${repo:url:home}|${repo:url:branch}/${item})) branch uses **Swift $versions[$item][Swift]**, requiring Xcode $versions[$item][Xcode])|\n)
)
)

^q(####) Current status

Branch|Build status
--------|------------------------
[`master`]($repo:url:home)|[![Build status: master branch](${travis:url}.svg?branch=master^if(${travis:build-status-token}|&token=${travis:build-status-token}))](${travis:url})
^join(^list($branches:nonmaster|[`${item}`]($repo:url:branch/$item)^q(|[)![Build status: $item branch](${travis:url}.svg?branch=${item}^if(${travis:build-status-token}|&token=${travis:build-status-token}))](${travis:url}))|\n)^if($repo:branch != master -AND !^containsValue($branches:nonmaster|$repo:branch)|[`${repo:branch}`]($repo:url:branch/$repo:branch)^q(|[)![Build status: $repo:branch branch](${travis:url}.svg?branch=${repo:branch}^if(${travis:build-status-token}|&token=${travis:build-status-token}))](${travis:url})
)
^if($project:readme:preamble|
$project:readme:preamble

)
^if($project:license|^q(###) License

$project:name is distributed under [the $project:license license](${repo:url:home}/blob/${repo:branch}/LICENSE).

$project:name is provided for your use—free-of-charge—on an as-is basis. We make no guarantees, promises or apologies. *Caveat developer.*


)^q(###) Adding $project:name to your project

[![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)

The simplest way to integrate $project:name is with the [Carthage](https://github.com/Carthage/Carthage) dependency manager.

First, add this line to your [`Cartfile`](https://github.com/Carthage/Carthage/blob/master/Documentation/Artifacts.md#cartfile):

```
$docs:carthageSpec
```

Then, use the `carthage` command to [update your dependencies](https://github.com/Carthage/Carthage#upgrading-frameworks).

Finally, you’ll need to [integrate $project:name into your project](${repo:url:home}/blob/${repo:branch}/INTEGRATION.md) in order to use ^if($repo:isPrivate|the API|[the API]($docs:api:index)) it provides.

Once successfully integrated, just add the following statement to any $project:language:name file where you want to use ${project:name}:

$project:import:block

See [the Integration document](${repo:url:home}/blob/${repo:branch}/INTEGRATION.md) for additional details on integrating $project:name into your project.

^if($project:readme:examples|^if($project:language == ObjC|
^q(##) ${project:name} Reference

)$project:readme:examples

)^q(###) API documentation

^if($repo:isPrivate|Open the `Documentation/API/index.html` file locally to view API documentation in your browser.|For detailed information on using $project:name, [API documentation](${docs:api:index}) is available.)


^if($project:readme:summation|$project:readme:summation


)^q(##) About

$project:meta[$project:grouping][about]

^if($project:meta[$project:grouping][contributing]|
^q(###) Contributing

$project:name is in active development, and we welcome your contributions.

$project:meta[$project:grouping][contributing]

)^if($project:meta[$project:grouping][acknowledgements]|
^q(###) Acknowledgements

$project:meta[$project:grouping][acknowledgements])
